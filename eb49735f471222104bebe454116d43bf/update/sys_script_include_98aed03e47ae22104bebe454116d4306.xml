<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.InsuranceUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>InsuranceUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var InsuranceUtils = Class.create();
InsuranceUtils.prototype = {
    initialize: function() {},

    fetchByPatient: function(patientSysId) {
        var result = [];
        var gr = new GlideRecord('u_insurance');
        gr.addQuery('u_patient_id', patientSysId);
        gr.query();
        while (gr.next()) {
            result.push({
                sys_id: gr.getUniqueValue(),
                policy_number: gr.u_policy_number + '',
                provider: gr.u_provider + '',
                coverage: gr.u_coverage_details + ''
            });
        }
        return result;
    },

    activePolicy: function(id) {
        var gr = new GlideRecord('u_insurance');
        if (gr.get(id)) {
            return gr.u_status == 'active';
        }
        return false;
    },


    fetchById: function(policySysId) {
        var gr = new GlideRecord('u_insurance');
        if (gr.get(policySysId)) {
            return {
                policy_number: gr.u_policy_number + '',
                provider: gr.u_provider + '',
                coverage: gr.u_coverage_details + '',
                patient: gr.u_patient_id.getDisplayValue()
            };
        }
        return null;
    },

    fetchByProvider: function(providerName) {
        var result = [];
        var gr = new GlideRecord('u_insurance');
        gr.addQuery('u_provider', providerName);
        gr.query();
        while (gr.next()) {
            result.push({
                policy_number: gr.u_policy_number + '',
                patient: gr.u_patient_id.getDisplayValue(),
                coverage: gr.u_coverage_details + ''
            });
        }
        return result;
    },

    type: 'InsuranceUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 18:44:38</sys_created_on>
        <sys_id>98aed03e47ae22104bebe454116d4306</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>InsuranceUtils</sys_name>
        <sys_package display_value="Healthcare Management " source="eb49735f471222104bebe454116d43bf">eb49735f471222104bebe454116d43bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="Healthcare Management ">eb49735f471222104bebe454116d43bf</sys_scope>
        <sys_update_name>sys_script_include_98aed03e47ae22104bebe454116d4306</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-21 01:17:45</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>98aed03e47ae22104bebe454116d4306</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-08 18:44:38</sys_created_on>
        <sys_id>a4ced03e47ae22104bebe454116d4309</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-08 18:44:38</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
